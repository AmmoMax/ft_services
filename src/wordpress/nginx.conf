user							www;
worker_processes				auto;
pid								/run/nginx.pid;
error_log						/var/log/nginx/error.log debug;

events {
	worker_connections				1024;
	}

http {
	default_type application/octet-stream;
	include /etc/nginx/mime.types;

	server {
        listen 5050				default_server;
        server_name				_;
		root					/www/wordpress;
		index					index.php;

		location ~ \.php$ {
			# проверяем существование файла в имени запроса, прежде чем передать управление FastCGI-серверу
			try_files			$uri =404;
			# включаем файл с настройками для fastcgi
			include				/etc/nginx/fastcgi_params;
			# определяет имя файла, дописываемое в конец строки с именем скрипта fastcgi
			fastcgi_index		index.php;
			# активируем модуль fastcgi для работы с php-fpm через IP
			fastcgi_pass		127.0.0.1:9000;
			fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		}
	}
	##
	# Basic Settings
	##

	sendfile on;
	# Ограничиваем объем данных для sendfile
    sendfile_max_chunk 128k;
	# Заголовок ответа и начало файла одним пакетом
    tcp_nopush on;
	# Отключаем буферизацию keep-alive соединений
    tcp_nodelay on;
	# Таймаут для keep-alive соединений
	keepalive_timeout 65;
	# Максимальное число запросов для одного keep-alive соединения
    keepalive_requests 100;
	# Сброс соединений, который перестали отвечать
	reset_timedout_connection on;
	# Таймаут для чтения тела запроса клиента
    client_body_timeout 5;
	# Таймаут для чтения заголовка запроса клиента
    client_header_timeout 5;
	# Время для ответа
    send_timeout 4;

	server_tokens off;
	types_hash_max_size 2048;

	##
	# SSL Settings
	##

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
	ssl_prefer_server_ciphers on;

	access_log						/var/log/nginx/access.log;

	##
	# Gzip Settings
	##

	gzip on;
}
