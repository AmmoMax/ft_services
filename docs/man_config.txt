Структура конфигурационного файла Kubernetes.
===============================================

В начале:
apiVersion: v1 - версия
kind: Deployment - тип объекта - например деплоймент или сервис

Каждый конфигурационный файл делится на 3 части:
1.  metadata
Описание метаданных того компонента, который описывается в текущем конфигурационном файле.

2. specification
Конкретные параметры для каждого пода
Спецификации могут быть различными в зависимости от типа компонента.
Раздел template описывается для конфига типа Deployment.
Имеет также свой раздел metadata для спецификации.
Имеет также свой раздел spec - в котором описывается спецификации для подов.
Раздел template это blueprint(template - шаблон) для подов.
Он определяет порты, которые будет использовать под, количество реплик, образ контейнера, имя и др.

3. status
генерируется автоматически и добавляется кубернетесом.
Status хранится в etcd. Там хранится status по любому компоненту кубернетеса.
Кубернетес непрерывно проверяет состояние статуса и спецификации для каждого пода, и если они отличаются (например в конфиге должно быть две реплики а реально работает только одна, потому что второй под упал) - старается привести текущий статус в состояние из конфига.
---

Labels and selectors.
Раздел metadata содержит Labels, как на уровне всего конфига напрмер Deployment, так и на уровне шаблона для подов
В разделе Labels мы даем какому то компоненту (например деплойменту или поду) пару "key: value", это могут быть любые значения. Связь labesl и selectors смотри ниже...

Раздел spec содержит selectors.
Мы говорим Deployment соединится(or to match) со всеми метками, которые описаны для подов.
Но у Deployment еще есть собственная Labels, про нее читай ниже...

Эта Labels используется для того, чтобы Service мог в своем Selectors ее определить и подключиться к нужному Deployment или к подам.

Для типа конфига описывающего Service:
В разделе ports описывается какой порт должен быть доступен снаружи:
параметр - port
и к какому порту у pod надо подключиться внутри кластера:
параметр - targetPort

Соответственно для пода описывается раздел ports, который имеет параметр:
- contatainerPort
К этому порту и подключается Service через targetPort